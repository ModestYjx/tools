{
  "data": {
    "articleedittype": 1,
    "authorized_status": false,
    "categories": "Linux",
    "channel": "0",
    "check_original": false,
    "content": "<p></p><div class=\"toc\"><h3>文章目录</h3><ul><ul><ul><li><a href=\"#_2\">写在前面</a></li><li><a href=\"#File_Browser_13\">File Browser</a></li><li><a href=\"#Apache2__33\">Apache2 正向代理</a></li></ul></ul></ul></div><p></p>\n<h3><a id=\"_2\"></a>写在前面</h3>\n<p>之前有很多 Caddy + File Browser 搭建个人网盘的文章，但年初Caddy关闭了File Browser插件，笔者尝试了一些备用链接，最终失败。</p>\n<p>同时，由于一直使用Apache作为Web服务器，管理多个站点，已经很熟练了，也踩了不少坑。最主要的是Apache可以方便的使用二级域名访问flask应用，见<a href=\"https://blog.csdn.net/qq_36962569/article/details/80885396\">使用Apache+mod_wsgi部署flask网站</a>。</p>\n<p>当然，File Browser可以直接作为主程序运行，使用 ip + 端口即可访问。由于Apache已经占用了80端口，并且自己有一个域名，因此想着使用二级域名访问File Browser。</p>\n<p>本文思路：</p>\n<ul>\n<li>安装 File Browser，可以使用 ip:port（如127.0.0.1:8088）访问</li>\n<li>使用 Apache 正向代理，此时可以使用 二级域名访问 File Browser（使用二级域名代理之前的ip:port）</li>\n</ul>\n<h3><a id=\"File_Browser_13\"></a>File Browser</h3>\n<p>主要参考<a href=\"https://www.mivm.cn/filebrowser/\">File Browser 安装及使用</a></p>\n<ul>\n<li>安装 <code>curl -fsSL https://filebrowser.xyz/get.sh | bash</code></li>\n</ul>\n<blockquote>\n<p>注意：在哪个文件夹下配置的，那么网盘显示的就是哪个文件夹内容</p>\n</blockquote>\n<ul>\n<li>配置\n<ul>\n<li>创建配置数据库 <code>filebrowser -d /etc/filebrowser.db config init</code></li>\n<li>设置监听地址 \t<code>filebrowser -d /etc/filebrowser.db config set --address 0.0.0.0</code></li>\n<li>设置监听端口\t<code>filebrowser -d /etc/filebrowser.db config set --port 8088</code></li>\n<li>设置语言环境 \t<code>filebrowser -d /etc/filebrowser.db config set --locale zh-cn</code></li>\n<li>设置日志位置 \t<code>filebrowser -d /etc/filebrowser.db config set --log /var/log/filebrowser.log</code></li>\n<li>添加一个用户 \t<code>filebrowser -d /etc/filebrowser.db users add root password --perm.admin</code>，之后使用 用户名：<code>root</code> ；密码：<code>password</code> 登录</li>\n<li><a href=\"https://docs.filebrowser.xyz/\">更多配置</a></li>\n</ul>\n</li>\n<li>启动 <code>filebrowser -d /etc/filebrowser.db</code></li>\n</ul>\n<blockquote>\n<p>注意：可以使用 screen 作为虚拟屏幕启动；screen 是十分简单好用的程序后台运行工具，请自行查询screen使用方法。</p>\n</blockquote>\n<p>经过以上配置，可以使用 ip:8088 访问File Browser<br>\n<img src=\"https://img-blog.csdnimg.cn/20190828202546385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTYyNTY5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3><a id=\"Apache2__33\"></a>Apache2 正向代理</h3>\n<p>Apache2 的安装使用和二级域名的解析见<a href=\"https://blog.csdn.net/qq_36962569/article/details/80885396\">使用Apache+mod_wsgi部署flask网站</a></p>\n<p>Apache2 正向代理主要参考<a href=\"https://www.cnblogs.com/feiyafeiblog/p/6812792.html\">Ubuntu下利用Apache转发模块实现反向代理</a></p>\n<ul>\n<li>配置Apache支持proxy和proxyreverse</li>\n</ul>\n<p>在Ubuntu系统下，Apache的配置文件在目录<code>/etc/apache2</code>下，里面会看到我们需要用到的两个目录：<br>\n<code>mods-available</code>  Apache所有的模块<br>\n<code>mods-enabled</code>   Apache所支持的模块</p>\n<p>接下来需要进入<code>mods-available</code> 找到 <code>proxy.load</code> 和 <code>proxy_http.load</code> 这两个模块，将这两个模块配置到 <code>mods-enabled</code></p>\n<p>输入命令<br>\n<code>ln -s /etc/apache2/mods-available/proxy.load /etc/apache2/mods-enabled/proxy.load</code><br>\n<code>ln -s /etc/apache2/mods-available/proxy_http.load /etc/apache2/mods-enabled/proxy_http.load</code></p>\n<ul>\n<li>配置虚拟主机</li>\n</ul>\n<p>同样也是在 <code>/etc/apache2</code> 下面有个关于虚拟主机的配置目录：<br>\n<code>sites-available</code> 所有可用的虚拟主机<br>\n<code>sites-enabled</code>  已经配置支持的主机</p>\n<p>首先进入 <code>sites-available</code> 将 <code>000-default.conf</code> 拷贝并重命名为 <code>proxy.conf</code>，使用命令 <code>cp 000-default.conf proxy.conf</code></p>\n<p>编辑 <code>proxy.conf</code></p>\n<pre><code class=\"prism language-bash\"><span class=\"token operator\">&lt;</span>VirtualHost *:80<span class=\"token operator\">&gt;</span>\n\tServerName pan.khay.site <span class=\"token comment\">#代理的二级域名</span>\n\tServerAdmin okhay@qq.com\n\n\tErrorLog <span class=\"token variable\">${APACHE_LOG_DIR}</span>/error.log\n\tCustomLog <span class=\"token variable\">${APACHE_LOG_DIR}</span>/access.log combined\n\n\tProxyPass / http://123.207.198.7:8088/  <span class=\"token comment\"># 转发的主机与端口号</span>\n\tProxyPassReverse / http://123.207.198.7:8088/ <span class=\"token comment\"># 如果有页面的重定向，不加此项会报错，此项正是反向代理</span>\n<span class=\"token operator\">&lt;</span>/VirtualHost<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>注意：之后将修改的 <code>proxy.conf</code> 拷贝到 <code>sites-enabled</code>（<code>sites-enabled</code>里面没有的话将不起作用）</p>\n</blockquote>\n<p>最后，重启 Apache，<code>sudo /etc/init.d/apache2 restart</code></p>\n<p>经过以上配置，可以使用个人二级域名访问 File Browser<br>\n<img src=\"https://img-blog.csdnimg.cn/20190828202616807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTYyNTY5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\nFile Browser界面<br>\n<img src=\"https://img-blog.csdnimg.cn/2019082820440899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTYyNTY5,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n\n",
    "description": "文章目录写在前面File BrowserApache2 正向代理\n写在前面\n之前有很多 Caddy + File Browser 搭建个人网盘的文章，但年初Caddy关闭了File Browser插件，笔者尝试了一些备用链接，最终失败。\n同时，由于一直使用Apache作为Web服务器，管理多个站点，已经很熟练了，也踩了不少坑。最主要的是Apache可以方便的使用二级域名访问flask应用，见使用A...",
    "id": "100125817",
    "markdowncontent": "@[toc]\n\n### 写在前面\n之前有很多 Caddy + File Browser 搭建个人网盘的文章，但年初Caddy关闭了File Browser插件，笔者尝试了一些备用链接，最终失败。\n\n同时，由于一直使用Apache作为Web服务器，管理多个站点，已经很熟练了，也踩了不少坑。最主要的是Apache可以方便的使用二级域名访问flask应用，见[使用Apache+mod_wsgi部署flask网站](https://blog.csdn.net/qq_36962569/article/details/80885396)。\n\n当然，File Browser可以直接作为主程序运行，使用 ip + 端口即可访问。由于Apache已经占用了80端口，并且自己有一个域名，因此想着使用二级域名访问File Browser。\n\n本文思路：\n- 安装 File Browser，可以使用 ip:port（如127.0.0.1:8088）访问\n- 使用 Apache 正向代理，此时可以使用 二级域名访问 File Browser（使用二级域名代理之前的ip:port）\n\n### File Browser\n主要参考[File Browser 安装及使用](https://www.mivm.cn/filebrowser/)\n- 安装 `curl -fsSL https://filebrowser.xyz/get.sh | bash`\n\n>注意：在哪个文件夹下配置的，那么网盘显示的就是哪个文件夹内容\n- 配置\n\t- 创建配置数据库 `filebrowser -d /etc/filebrowser.db config init`\n\t- 设置监听地址 \t`filebrowser -d /etc/filebrowser.db config set --address 0.0.0.0`\n\t- 设置监听端口\t`filebrowser -d /etc/filebrowser.db config set --port 8088`\n\t- 设置语言环境 \t`filebrowser -d /etc/filebrowser.db config set --locale zh-cn`\n\t- 设置日志位置 \t`filebrowser -d /etc/filebrowser.db config set --log /var/log/filebrowser.log`\n\t- 添加一个用户 \t`filebrowser -d /etc/filebrowser.db users add root password --perm.admin`，之后使用 用户名：`root` ；密码：`password` 登录\n\t- [更多配置](https://docs.filebrowser.xyz/)\n- 启动 `filebrowser -d /etc/filebrowser.db`\n\n>注意：可以使用 screen 作为虚拟屏幕启动；screen 是十分简单好用的程序后台运行工具，请自行查询screen使用方法。\n\n经过以上配置，可以使用 ip:8088 访问File Browser\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190828202546385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTYyNTY5,size_16,color_FFFFFF,t_70)\n\n### Apache2 正向代理\nApache2 的安装使用和二级域名的解析见[使用Apache+mod_wsgi部署flask网站](https://blog.csdn.net/qq_36962569/article/details/80885396)\n\nApache2 正向代理主要参考[Ubuntu下利用Apache转发模块实现反向代理](https://www.cnblogs.com/feiyafeiblog/p/6812792.html)\n\n- 配置Apache支持proxy和proxyreverse\n\n在Ubuntu系统下，Apache的配置文件在目录`/etc/apache2`下，里面会看到我们需要用到的两个目录：\n`mods-available`  Apache所有的模块\n`mods-enabled`   Apache所支持的模块\n\n接下来需要进入`mods-available` 找到 `proxy.load` 和 `proxy_http.load` 这两个模块，将这两个模块配置到 `mods-enabled`\n\n输入命令\n`ln -s /etc/apache2/mods-available/proxy.load  /etc/apache2/mods-enabled/proxy.load`\n`ln -s /etc/apache2/mods-available/proxy_http.load  /etc/apache2/mods-enabled/proxy_http.load`\n\n- 配置虚拟主机\n\n同样也是在 `/etc/apache2` 下面有个关于虚拟主机的配置目录：\n`sites-available` 所有可用的虚拟主机\n`sites-enabled`  已经配置支持的主机\n\n首先进入 `sites-available` 将 `000-default.conf` 拷贝并重命名为 `proxy.conf`，使用命令 `cp 000-default.conf proxy.conf`\n\n编辑 `proxy.conf`\n```bash\n<VirtualHost *:80>\n\tServerName pan.khay.site #代理的二级域名\n\tServerAdmin okhay@qq.com\n\n\tErrorLog ${APACHE_LOG_DIR}/error.log\n\tCustomLog ${APACHE_LOG_DIR}/access.log combined\n\n\tProxyPass / http://123.207.198.7:8088/  # 转发的主机与端口号\n\tProxyPassReverse / http://123.207.198.7:8088/ # 如果有页面的重定向，不加此项会报错，此项正是反向代理\n</VirtualHost>\n```\n\n>注意：之后将修改的 `proxy.conf` 拷贝到 `sites-enabled`（`sites-enabled`里面没有的话将不起作用）\n\n最后，重启 Apache，`sudo /etc/init.d/apache2 restart`\n\n经过以上配置，可以使用个人二级域名访问 File Browser\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190828202616807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTYyNTY5,size_16,color_FFFFFF,t_70)\nFile Browser界面\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2019082820440899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2OTYyNTY5,size_16,color_FFFFFF,t_70)\n",
    "original_link": "",
    "readType": "public",
    "reason": "",
    "resource_url": "",
    "status": 1,
    "tags": "个人网盘,File Browser,Apache2,正向代理,Ubuntu",
    "title": "[Ubuntu16.04] File Browser + Apache2 正向代理搭建个人网盘（二级域名）",
    "type": "original",
    "use_fans_view": 1,
    "use_vip_view": 1
  },
  "error": "",
  "status": true
}